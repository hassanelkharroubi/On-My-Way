Index: app/src/main/java/com/example/onmyway/Models/UserDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.onmyway.Models;\r\n\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.database.sqlite.SQLiteOpenHelper;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.Nullable;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class UserDB extends SQLiteOpenHelper {\r\n\r\n    public static final String TAG = \"UserDB\";\r\n\r\n    private static final String BD_NAME=\"GestionUSER\";\r\n    private static final String TABLE=\"user\";\r\n    private static final int VERSION=1;\r\n    //les colounes de notre tableau ;\r\n\r\n    private static final String ID=\"ID\";\r\n    private static final String NAME=\"NAME\";\r\n    private static final String ADMIN=\"ADMIN\";\r\n    private static final String EMAIL=\"EMAIL\";\r\n    private static final String PASSWORD=\"PASSWORD\";\r\n\r\n\r\n    public UserDB(@Nullable Context context) {\r\n\r\n        super(context, BD_NAME, null, VERSION);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n\r\n        String request=\"CREATE TABLE if not exists \"+TABLE+\" (\"+ID+\" varchar(20) primary key,\" +\r\n                \"\"+NAME+\" varchar(30),\" +\r\n                \"\"+EMAIL+\" varchar(30),\" +\r\n                \"\"+PASSWORD+\" varchar(30),\" +\r\n                \"\"+ADMIN+\" varchar(5))\";\r\n        db.execSQL(request);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\r\n\r\n        String detele_table=\"drop table if exists \"+TABLE;\r\n        db.execSQL(detele_table);\r\n        onCreate(db);\r\n\r\n    }\r\n\r\n    public void addUser(User user)\r\n    {\r\n        SQLiteDatabase db=getWritableDatabase();\r\n        ContentValues data=new ContentValues();\r\n        data.put(ID,user.getId());\r\n        data.put(NAME,user.getfullName());\r\n        data.put(EMAIL,user.getEmail());\r\n        data.put(PASSWORD,user.getPassword());\r\n        data.put(ADMIN,user.getAdmin());\r\n        db.insert(TABLE,null,data);\r\n    }\r\n\r\n\r\n    public int deleteUser(String id)\r\n    {\r\n        SQLiteDatabase db=getWritableDatabase();\r\n        int deleted=db.delete(TABLE,ID+\" =?\",new String[]{id});\r\n        db.close();\r\n\r\n       return deleted;\r\n\r\n    }\r\n\r\n    public int delletAllusers(){\r\n        SQLiteDatabase db=getWritableDatabase();\r\n        int deleted=db.delete(TABLE,null,null);\r\n        db.close();\r\n\r\n        return deleted;\r\n\r\n    }\r\n    public User findUserByCin(final String cin)\r\n\r\n    {\r\n        Log.d(TAG, cin);\r\n        User user = null;\r\n        SQLiteDatabase db = getReadableDatabase();\r\n        String query = \"SELECT * FROM \" + TABLE + \" WHERE upper(\" + ID + \") =?\";\r\n        Cursor cursor = db.rawQuery(query, new String[]{cin});\r\n        if (cursor.moveToFirst()) {\r\n\r\n            user = new User();\r\n            user.setEmail(cursor.getString(cursor.getColumnIndex(EMAIL)));\r\n            user.setfullName(cursor.getString(cursor.getColumnIndex(NAME)));\r\n            user.setId(cursor.getString(cursor.getColumnIndex(ID)));\r\n            user.setPassword(cursor.getString(cursor.getColumnIndex(PASSWORD)));\r\n            user.setAdmin(cursor.getString(cursor.getColumnIndex(ADMIN)));\r\n        }\r\n        db.close();\r\n        cursor.close();\r\n\r\n        return user;\r\n    }\r\n\r\n    public ArrayList<User> getAllUsers()\r\n    {\r\n        SQLiteDatabase db=getReadableDatabase();\r\n\r\n        String query=\"select * from \"+TABLE;\r\n\r\n        ArrayList<User> users=new ArrayList<>();\r\n        User user=new User();\r\n\r\n        Cursor cursor= db.rawQuery(query,null);\r\n\r\n        if(cursor.moveToFirst())\r\n        {\r\n\r\n            do {\r\n                user.setId(cursor.getString(cursor.getColumnIndex(ID)));\r\n                user.setfullName(cursor.getString(cursor.getColumnIndex(NAME)));\r\n                user.setEmail( cursor.getString(cursor.getColumnIndex(EMAIL)));\r\n                user.setPassword( cursor.getString(cursor.getColumnIndex(PASSWORD)));\r\n                user.setAdmin(cursor.getString(cursor.getColumnIndex(ADMIN)));\r\n\r\n                users.add(user);\r\n                //we have change reference of user or we will be add the same user to last position\r\n                user=new User();\r\n\r\n            }while(cursor.moveToNext());\r\n\r\n        }\r\n        cursor.close();\r\n        return users;\r\n\r\n\r\n    }\r\n\r\n    public void addUsers(ArrayList<User> users) {\r\n\r\n        int i=0;\r\n\r\n        while(i<users.size())\r\n        {\r\n            this.addUser(users.get(i));\r\n            Log.i(\"userData\",users.get(i).getEmail()+\"password : \"+users.get(i).getPassword()+\"full name :\"+users.get(i).getfullName() );\r\n\r\n\r\n            i++;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/onmyway/Models/UserDB.java b/app/src/main/java/com/example/onmyway/Models/UserDB.java
--- a/app/src/main/java/com/example/onmyway/Models/UserDB.java	(revision 9c0315037d9a59f0de5681caaf99b95bac11935e)
+++ b/app/src/main/java/com/example/onmyway/Models/UserDB.java	(date 1653397184386)
@@ -117,10 +117,12 @@
         String query="select * from "+TABLE;
 
         ArrayList<User> users=new ArrayList<>();
+     //   return users;
+
         User user=new User();
 
         Cursor cursor= db.rawQuery(query,null);
-
+        Log.d(TAG, cursor.getColumnNames().toString());
         if(cursor.moveToFirst())
         {
 
